#tahoeConfigAction @Controller/DefaultController.php
'Node nickname' : 'Node nickname'
'Introducer node furl' : 'Introducer node furl'
'ERROR: Invalid introducer`s furl, try again' : 'ERROR: Invalid introducer`s furl, try again'
'Warning: wrong KHN parameters' : 'Warning: wrong KHN parameters'
'Tahoe storage is successfully configured' : 'Tahoe storage is successfully configured'
'ERROR: Tahoe storage is actually not configured properly or configured at all' : 'ERROR: Tahoe storage is actually not configured properly or configured at all'

#configuring.html.twig @Resources/views/Default
'Configure Tahoe storage' : 'Configure Tahoe storage'
#configurenode.html.twig @Resources/views/Default
'Save' : 'Save'

#menu @ElkarBackupBundle
'Manage Tahoe storage' : 'Manage Tahoe storage'

#controller::manageBackupsAction @ElkarBackupBundle
'Turn on Tahoe storage' : 'Turn on Tahoe storage'
'Warning: tahoe is not properly configured and will not work' : 'Warning: tahoe is not properly configured and will not work'


#configuring.html.twig @Resources/views/Default
configuring_help1: |
 <h4>Tahoe storage is being configured...</h4>
 <br>
 <p>Please wait, the process will take
configuring_help2: |
 seconds.</p>
 <p>Once it is ready you will be automatically redirected back to the configuration page.</p>
 <br>
 <small>Leaving this page will NOT cancel the configuration process</small>

#configurenode.html.twig @Resources/views/Default
configurenode_help: |
 <h4>Node nickname</h4>
 Optional. If left empty 'elkarbackup_node' will be set. Do not add blank spaces.
 <h4>Introducer furl</h4>
 The url needed to get connected to the tahoe network.
 <h4>K-H-N parameters</h4>
 <p>Optional. If left empty K=3, H=7 and N=10 will be set. Rule: 1 <= K <= H <= N</p>
 <p>K = shares needed</p>
 <p>H = shares happy</p>
 <p>N = shares total</p>
 <p>Data is erasure-coded into N shares distributed across at least H distinct storage servers so that it can be recovered from any K of these servers.</p>
 <p>Requiered space to store data in the grid given data size = S and supossing the backup successfully writes in N 'servers':</p>
 <p>requiered space = S*N/K</p>