imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  %locale%
    trust_proxy_headers: false # Whether or not the Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:
        save_path: %kernel.root_dir%/sessions

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        warning_load_level: %warning_load_level%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    # bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    # host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    # spool:     { type: memory }

monolog:
    handlers:
        main:
            type:  stream
            path:  %kernel.logs_dir%/%kernel.environment%.log
            level: debug
        firephp:
            type:  firephp
            level: info

services:
    BnvWebLogger:
        class: Symfony\Bridge\Monolog\Logger
        arguments: [BnvWeb]
        calls:
            - [pushProcessor, [@BnvWebUserLoggerProcessor]]
            - [pushHandler,   [@StreamHandler]]
            - [pushHandler,   [@BnvLoggerHandler]]
    BnvLoggerHandler:
        class: Binovo\ElkarBackupBundle\Logger\LoggerHandler
        calls:
            - [setContainer,  [@service_container] ]
    StreamHandler:
        class: Monolog\Handler\StreamHandler
        # 200 = INFO, see Monolog::Logger for the values of log levels
        arguments: [%kernel.logs_dir%/BnvLog.log, 200]
        calls:
            - [setFormatter, [@BnvWebLoggerFormatter]]
    BnvWebUserLoggerProcessor:
        class: Binovo\ElkarBackupBundle\Logger\WebUserLoggerProcessor
        calls:
            - [setContainer, [@service_container] ]
    BnvWebLoggerFormatter:
        class: Monolog\Formatter\LineFormatter
        arguments: ["[%%datetime%%] %%channel%%.%%level_name%%: %%message%% %%context%% %%extra.user_name%% %%extra.user_email%%\n"]
    LoginListener:
        class: Binovo\ElkarBackupBundle\Listener\LoginListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: security.interactive_login }
    BnvTwigDebug:
        class: Twig_Extension_Debug
        tags:
            - { name: 'twig.extension' }
    BnvTwigExtension:
        class: Binovo\ElkarBackupBundle\Twig\Extension
        tags:
            - { name: 'twig.extension' }
    kernel.listener.LocaleFromSessionListener:
        class: Binovo\ElkarBackupBundle\Listener\LocaleFromSessionListener
        calls:
            - [setContainer,  [@service_container] ]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    Tahoe:
        class: Binovo\ElkarTahoeBundle\Utils\TahoeBackup
        arguments: ["@BnvWebLogger"]

parameters:
    supported_locales: [es, en, eu]